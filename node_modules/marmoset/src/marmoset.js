/**
 * event system
 *
 * event = (ctx, type, t)
 *
 * When event created, do not changed event, because it's already happened.
 *
 * TODO context change ability
 *
 */
import merge from "./merge";
import Timeline from "./eventTimeline/eventTimeline";
import Traceline from "./eventTraceline/eventTraceline";
import CloseEventOrder from "./closeEventOrder";
import Bubble from "./bubble/bubble";

let combine = (map1 = {}, map2 = {}) => {
	for (let name in map2) {
		map1[name] = map2[name];
	}
	return map1;
}

export default (selfDefinedModels = {}) => {
	let timelineModel = Timeline();
	let tracelineModel = Traceline();
	let closeEventOrder = CloseEventOrder(timelineModel);
    let bubble = Bubble();

	let innerModels = [timelineModel, tracelineModel, closeEventOrder, bubble];

	return merge(combine(innerModels, selfDefinedModels));
}